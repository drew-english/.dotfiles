set -g mouse on

# Set accurate color reproduction
# set-option -ga terminal-overrides ",xterm-256color:RGB"
set -g default-terminal "screen-256color"
set -sg terminal-overrides ",*:RGB"

# https://github.com/tmux-plugins/tmux-sensible
set -s escape-time 0
set -g display-time 4000
set -g history-limit 50000

# Status bar
set -g status-style 'bg=#333333 fg=#5eacd3'
set -g status-left-length 40
set -g status-right-length 100

base_right_status='##{?window_bigger,[##{window_offset_x#}##,##{window_offset_y#}] ,}"##{=21:pane_title#}" %H:%M %d-%b-%y'
target_status="#{l:#(tmux list-panes -af \"##{==:##{pane_id#},'%\$pane_id'#}\" -F \"##{session_name#}(##P):##{pane_current_command#} |\")}"
# set -g status-right $base_right_status
run-shell "tmux set -g status-right '$base_right_status'"
bind -N "Track pane's command in status bar" t run-shell "pane_id=#{pane_id}; tmux set -g status-right '$target_status $base_right_status'"
bind -N "Untrack the command in status bar" T run-shell "pane_id=#{pane_id}; tmux set -g status-right '$base_right_status'"

# Source file reload
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# 1 based index for windows and panes
set -g base-index 1
set-window-option -g pane-base-index 1

# Vim-like selection + copying
set-window-option -g mode-keys vi
run-shell ~/.config/tmux/copy.sh
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi Escape send-keys -X cancel

# Prefix binding
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix
bind a last-window

# Sessionizer
bind -N "Find / create session from workspace" f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh -s ~/workspace ~/workspace/worktrees"
bind -N "Find / create session from home dir" F run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh -s ~/ ~/workspace ~/workspace/worktrees"
bind -N "Go to home" H run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh ~"
bind -N "Go to dotfiles" D run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh ~/.dotfiles"
bind -N "Go to gemini" G run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh ~/workspace/gemini"
bind -N "Kill all other sessions" -n M-X run-shell "tmux kill-session -a && tmux display 'Killed all other sessions'"

# Layouts
bind -N "Tri Pane Layout" M-1 select-layout "5ca9,362x80,0,0[362x54,0,0{185x54,0,0,1,176x54,186,0,17},362x25,0,55,20]"
bind -N "Focused Vertical Layout" M-2 select-layout "b8fe,316x75,0,0[316x50,0,0,5,316x24,0,51,6]"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Window Navigation
bind -n M-h select-window -p
bind -n M-l select-window -n
bind -n M-/ last-window
bind -n M-L switch-client -l

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
